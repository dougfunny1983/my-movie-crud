{"ast":null,"code":"import _classCallCheck from\"/home/doug/projetos-trybe/my-movie-crud/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/doug/projetos-trybe/my-movie-crud/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/doug/projetos-trybe/my-movie-crud/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/doug/projetos-trybe/my-movie-crud/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/doug/projetos-trybe/my-movie-crud/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/doug/projetos-trybe/my-movie-crud/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Redirect}from'react-router-dom';import Loading from'../components/Loading';import{MovieForm}from'../components';import*as movieAPI from'../services/movieAPI';var EditMovie=/*#__PURE__*/function(_Component){_inherits(EditMovie,_Component);function EditMovie(props){var _this;_classCallCheck(this,EditMovie);_this=_possibleConstructorReturn(this,_getPrototypeOf(EditMovie).call(this,props));_this.state={status:'loading',shouldRedirect:false,movie:[]};_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(EditMovie,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;movieAPI.getMovie(this.props.match.params.id).then(function(data){return _this2.setState({status:'',movie:data});});}},{key:\"handleSubmit\",value:function handleSubmit(updatedMovie){var _this3=this;movieAPI.updateMovie(updatedMovie).then(function(data){return _this3.setState({shouldRedirect:true,movie:data});});}},{key:\"render\",value:function render(){var _this$state=this.state,status=_this$state.status,shouldRedirect=_this$state.shouldRedirect,movie=_this$state.movie;if(shouldRedirect)return React.createElement(Redirect,{to:\"/my-movie-crud/\"});if(status==='loading')return React.createElement(Loading,null);return React.createElement(MovieForm,{movie:movie,onSubmit:this.handleSubmit});}}]);return EditMovie;}(Component);export default EditMovie;","map":{"version":3,"sources":["/home/doug/projetos-trybe/my-movie-crud/src/pages/EditMovie.js"],"names":["React","Component","Redirect","Loading","MovieForm","movieAPI","EditMovie","props","state","status","shouldRedirect","movie","handleSubmit","bind","getMovie","match","params","id","then","data","setState","updatedMovie","updateMovie"],"mappings":"0vBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,QAAT,KAAyB,kBAAzB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,OAASC,SAAT,KAA0B,eAA1B,CACA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,sBAA1B,C,GAEMC,CAAAA,S,mEACJ,mBAAYC,KAAZ,CAAmB,2CACjB,2EAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACXC,MAAM,CAAE,SADG,CAEXC,cAAc,CAAE,KAFL,CAGXC,KAAK,CAAE,EAHI,CAAb,CAKA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB,CAPiB,aAQlB,C,mFAEmB,iBAClBR,QAAQ,CAACS,QAAT,CAAkB,KAAKP,KAAL,CAAWQ,KAAX,CAAiBC,MAAjB,CAAwBC,EAA1C,EAA8CC,IAA9C,CAAmD,SAACC,IAAD,QACjD,CAAA,MAAI,CAACC,QAAL,CAAc,CACZX,MAAM,CAAE,EADI,CAEZE,KAAK,CAAEQ,IAFK,CAAd,CADiD,EAAnD,EAMD,C,kDAEYE,Y,CAAc,iBACzBhB,QAAQ,CAACiB,WAAT,CAAqBD,YAArB,EAAmCH,IAAnC,CAAwC,SAACC,IAAD,QACtC,CAAA,MAAI,CAACC,QAAL,CAAc,CACZV,cAAc,CAAE,IADJ,CAEZC,KAAK,CAAEQ,IAFK,CAAd,CADsC,EAAxC,EAMD,C,uCAEQ,iBACmC,KAAKX,KADxC,CACCC,MADD,aACCA,MADD,CACSC,cADT,aACSA,cADT,CACyBC,KADzB,aACyBA,KADzB,CAEP,GAAID,cAAJ,CAAoB,MAAO,qBAAC,QAAD,EAAU,EAAE,CAAC,iBAAb,EAAP,CAEpB,GAAID,MAAM,GAAK,SAAf,CAA0B,MAAO,qBAAC,OAAD,MAAP,CAE1B,MAAO,qBAAC,SAAD,EAAW,KAAK,CAAEE,KAAlB,CAAyB,QAAQ,CAAE,KAAKC,YAAxC,EAAP,CACD,C,uBApCqBX,S,EAuCxB,cAAeK,CAAAA,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Loading from '../components/Loading';\nimport { MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'loading',\n      shouldRedirect: false,\n      movie: [],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    movieAPI.getMovie(this.props.match.params.id).then((data) =>\n      this.setState({\n        status: '',\n        movie: data,\n      }),\n    );\n  }\n\n  handleSubmit(updatedMovie) {\n    movieAPI.updateMovie(updatedMovie).then((data) =>\n      this.setState({\n        shouldRedirect: true,\n        movie: data,\n      }),\n    );\n  }\n\n  render() {\n    const { status, shouldRedirect, movie } = this.state;\n    if (shouldRedirect) return <Redirect to=\"/my-movie-crud/\" />;\n\n    if (status === 'loading') return <Loading />;\n\n    return <MovieForm movie={movie} onSubmit={this.handleSubmit} />;\n  }\n}\n\nexport default EditMovie;\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: {\n      id: PropTypes.number,\n    },\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}